// ===== OPTIMIZED SCSS MIXINS =====

// ===== RESPONSIVE MIXINS =====
@mixin media-min($breakpoint) {
    $min: map-get($breakpoints, $breakpoint);
    @media (min-width: $min) {
        @content;
    }
}

@mixin media-max($breakpoint) {
    $max: map-get($breakpoints, $breakpoint) - 0.02;
    @media (max-width: $max) {
        @content;
    }
}

// ===== LAYOUT MIXINS =====
@mixin flex($flex: flex, $align: normal, $justify: flex-start, $direction: row, $wrap: wrap) {
    display: $flex;
    flex-wrap: $wrap;
    align-items: $align;
    justify-content: $justify;
    flex-direction: $direction;
}

@mixin grid($columns: 1fr, $gap: $spacing-md) {
    display: grid;
    grid-template-columns: $columns;
    gap: $gap;
}

@mixin center-content {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin center-vertical {
    display: flex;
    align-items: center;
}

@mixin center-horizontal {
    display: flex;
    justify-content: center;
}

// ===== SPACING MIXINS =====
@mixin section-padding($top: $spacing-3xl, $bottom: $spacing-3xl) {
    padding: $top 0 $bottom 0;
    
    @include media-max(lg) {
        padding: $spacing-2xl 0;
    }
    
    @include media-max(md) {
        padding: $spacing-xl 0;
    }
    
    @include media-max(sm) {
        padding: $spacing-lg 0;
    }
}

@mixin container-padding($left: $spacing-xl, $right: $spacing-xl) {
    padding-left: $left;
    padding-right: $right;
    
    @include media-max(md) {
        padding-left: $spacing-md;
        padding-right: $spacing-md;
    }
}

// ===== TYPOGRAPHY MIXINS =====
@mixin text-clamp($line: 2, $line-height: 1.5em, $height: auto) {
    display: -webkit-box !important;
    overflow: hidden;
    max-height: #{$line-height * $line};
    line-height: $line-height !important;
    text-overflow: ellipsis;
    -webkit-line-clamp: $line;
    line-clamp: $line;
    -webkit-box-orient: vertical;
    word-wrap: break-word;
    word-break: break-all !important;
    white-space: normal !important;
    
    @if ($height != auto) {
        height: #{$line-height * $line}em;
    } @else {
        height: auto;
    }
}

@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-hide {
    font: 0/0 a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

@mixin heading($size: 'lg', $weight: 'bold') {
    font-family: $font-mont;
    font-weight: if($weight == 'extrabold', $font-weight-extrabold, 
                   if($weight == 'bold', $font-weight-bold,
                   if($weight == 'semibold', $font-weight-semibold, $font-weight-bold)));
    line-height: $line-height-heading;
    margin: 0 0 $spacing-md 0;
    color: var(--text-primary);
    
    @if $size == 'xl' {
        font-size: clamp(rem(24), 5vw, rem(48));
        font-weight: $font-weight-extrabold;
    } @else if $size == 'lg' {
        font-size: clamp(rem(20), 4vw, rem(36));
    } @else if $size == 'md' {
        font-size: clamp(rem(18), 3vw, rem(28));
    }
}

// ===== COMPONENT MIXINS =====
@mixin button-base($variant: 'primary') {
    @include flex(flex, center, center, row, nowrap);
    gap: $spacing-sm;
    padding: $spacing-md $spacing-xl;
    font-family: inherit;
    font-size: rem(16);
    font-weight: $font-weight-medium;
    line-height: 1.5;
    text-decoration: none;
    border: 2px solid transparent;
    border-radius: $radius-md;
    cursor: pointer;
    transition: all $animation-duration-normal $animation-timing;
    white-space: nowrap;
    
    @if $variant == 'primary' {
        background: var(--accent);
        color: var(--text-primary);
        border-color: var(--accent);
    } @else if $variant == 'secondary' {
        background: var(--secondary);
        color: var(--primary);
        border-color: var(--secondary);
    } @else if $variant == 'outline' {
        background: transparent;
        color: var(--accent);
        border-color: var(--accent);
    }
    
    &:hover {
        transform: translateY(-2px);
        
        @if $variant == 'primary' {
            background: var(--primary-light);
            border-color: var(--primary-light);
        } @else if $variant == 'secondary' {
            background: var(--text-primary);
            border-color: var(--text-primary);
        } @else if $variant == 'outline' {
            background: var(--accent);
            color: var(--text-primary);
        }
    }
    
    &:focus {
        outline: 2px solid var(--accent);
        outline-offset: $spacing-sm;
    }
    
    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        pointer-events: none;
    }
}

@mixin card-base($variant: 'default') {
    border: none;
    border-radius: $radius-xl;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    box-shadow: $shadow-lg;
    transition: all $animation-duration-normal $animation-timing;
    
    @if $variant == 'info' {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba($color-secondary, 0.2);
    } @else if $variant == 'form' {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba($color-secondary, 0.2);
    }
    
    &:hover {
        transform: translateY(-5px);
        box-shadow: $shadow-xl;
    }
}

// ===== RESPONSIVE DISPLAY MIXINS =====
@mixin responsive-display {
    .pc {
        display: block;
    }
    
    .mo {
        display: none;
    }
    
    @include media-max(xl) {
        .pc {
            display: none;
        }
        
        .mo {
            display: block;
            height: rem(40);
        }
    }
    
    @include media-max(md) {
        .mo {
            height: rem(24);
        }
    }
}

// ===== ANIMATION MIXINS =====
@mixin fade-in($duration: $animation-duration-normal) {
    opacity: 0;
    animation: fadeIn $duration ease-in-out forwards;
}

@mixin slide-up($distance: $spacing-xl, $duration: $animation-duration-normal) {
    opacity: 0;
    transform: translateY($distance);
    animation: slideUp $duration ease-out forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

@keyframes slideUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
